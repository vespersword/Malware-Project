import servkey
import os
import asym
from Crypto.Cipher import PKCS1_OAEP
from Crypto.PublicKey import RSA
from Crypto import Random
from Crypto.Hash import SHA

m = b'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCkCo88xfnj9RlNldr0yzvSD4/jjO/3cVnhwCjoVZNCoetViIuxyx1WVhlwQaO749JYc3DN8HTXxF/YxHDfjLpgZrxAwGVHj+aT9CdDlmiRLmmg/hACWhZDsRuRxqYcc31QjaYakYBDnu7XFgGZuRGB4YNZsWpWqWHXIgEty10niR9U9b+mYO0EAnauY9fIf0mU3XADdDaNiyTAtILaD+pNSRsld7eOlHrB96XiWhKZuA26n1M4i6hWhR5acXXu5RTnbL7P586NlSOx0TTYJRixTl6pKZbm5JIZms2wxJhfQNL15pGNPAyq5J0ZMFYRtfcSHC6WGZ6F3xvl1cXBndTb'

def encrypt_priv_key(msg, key):
    cipher = asym.assymetric()
    cipher.key = key
    #cipher.key.publickey() = servkey.spu
    cipher.encrypt(m)

def decrypt_priv_key(msg, key):
    cipher = asym.assymetric()
    cipher.key = servkey.spr
    #cipher.key.publickey() = servkey.spu

if __name__ == "__main__":
    enc = encrypt_priv_key(m, servkey.spr)
    print(enc)
